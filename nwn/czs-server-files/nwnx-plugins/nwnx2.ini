[NWNX]
disablenwnxinit=y     #Set to "y" to not enforce the NWNX!INIT requirement

[Debug]
debuglevel=0          #Set to 1 or higher to output successively
#                     # verbose debug information

[LogDir]
logdir=logs.0         #Set to the relative root of the log directory.


[FIXES]
copy_vars = 1                      # Copy local variables on stack split and on store transaction,
                                   # fire OnDisturbed when you merge a stack from a placeable
compare_vars = 1                   # If set to 1, items with different local vars don't stack
keep_hidden_in_conversation = 0    # If set to 1, creatures don't unhide when they start a conversation
hp_limit = -10                     # Negative HP limit - values up to -127 are allowed

hide_charlist_all = 0              # Hide the whole online characters list on login (appears empty)
hide_charlist_levels = 1           # Hide the class(es) (displays nothing instead of class list)
hide_charlist_portraits = 0        # Hide the portrait (shows default male/female portrait)
hide_charlist_dms = 1              # Hide DMs and possessed NPCs

cap_ability_inc = 0                # If greater than zero, set ability increase cap.
cap_ability_dec = 0                # If greater than zero, set ability decrease cap.
cap_atkbonus_inc = 0               # If greater than zero, set attack bonus increase cap.
cap_atkbonus_dec = 0               # If greater than zero, set attack bonus decrease cap.
cap_skill_inc = 0                  # If greater than zero, set skill increase cap.
cap_skill_dec = 0                  # If greater than zero, set skill decrease cap.


[EVENTS]
;event_script=
;enable_unsafe_events=0


[ODBC2]
; for sqlite3
;source=SQLITE
;file=./test.sqlite3

; for mysql
;source=MYSQL
;server=localhost
;user=username
;pass=password
;db=database

; for postgre
;source=PGSQL
;server=localhost
;user=username
;pass=password
;db=database

; for sql server (CZS specific)
source=MSSQLSERVER
server=yourServerIPAddress
user=yourUsername
pass=yourPassword
db=czs-db

; Set hookscorco to false if you want to disable hooking of
; StoreCampaignObject and RetrieveCampaignObject entirely
hookscorco=true


[RESOURCEMANAGER]
; Logs any files that aren't found internally or in resource handlers.
; These can potentially leak memory.
; Default: 0.
warn_missing = 0;
; If set to 1, resources will hook CRes's constructor and destructor.
; This can be useful for debugging resource issues.
; Default: 0.
debug_cres = 0;
; Source path is the directory resman attempts to read
; files from.  The directory structure must be:
; <SourcePath>/<resource file extension>/<resource file>
SourcePath = resman


[LUA]
preload=./lua/preload.lua
# event listener function
eventListener=run_event
# token listener function
tokenListener=call_token
# Scorco functions
sco=sco
rco=rco

[CHAT]
chat_script=fky_chat # default = chat_script ;)
server_script=fky_chat_srv # without extension!
processnpc=0 # switch NPC speech processing on/off
ignore_silent=0 # disable processing of silent talk/shout messages

[JVM]
# Specify your classpath here.
# You will at least need the org.nwnx bundle jar and all the
# custom classes you intend to load. If you're using some fancy
# framework, you can load org.nwnx.nwnx2.java in setup() too.
#classpath="./jvm/org.nwnx.nwnx2.jvm.jar"
classpath="./jvm/org.nwnx.nwnx2.jvm.jar:./jvm/antlr-2.7.7.jar:./jvm/c3p0-0.9.5.1.jar:./jvm/CyberpunkZombieSurvival_JVM.jar:./jvm/dom4j-1.6.1.jar:./jvm/hibernate-c3p0-4.0.0.CR2.jar:./jvm/hibernate-commons-annotations-4.0.1.Final.jar:./jvm/hibernate-core-4.2.0.Final.jar:./jvm/hibernate-jpa-2.0-api-1.0.1.Final.jar:./jvm/ini4j-0.5.4.jar:./jvm/javassist-3.15.0-GA.jar:./jvm/jboss-logging-3.1.0.GA.jar:./jvm/jboss-transaction-api_1.1_spec-1.0.0.Final.jar:./jvm/joda-time-2.9.9.jar:./jvm/jtds-1.3.1.jar:tools.jar:./jvm/mssql-jdbc-6.2.2.jre8.jar:./jvm/mchange-commons-java-0.2.12.jar"


# You can specify additional options to your VM here.
# The defaults are probably only useful for developers and
# will spam your server console.
#vmOptions="-verbose:jni -Xcheck:jni"
vmOptions=""

# To attach a remote debugger:
# With Eclipse, just load your project code, and add a new remote debug session
# to the given host and port. Set a breakpoint, and watch it stop there. :)
# vmOptions="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000"

# Print each event and token to the console as it occurs.
# Useful to see what is going on, but makes the server console
# otherwise unusable on any busy server.
printEvents=0

# Prints each NWScript call to stdout as it occurs.
# For really bad cases of WTF-is-going-on (Thouch attaching a debugger
# to the JVM will be of more help).
debugNWScriptCalls=0

# This is a class that has the following methods:
#   static void setup() // Called immediately after JVM initialisation.
#   static void init() // Called AFTER resolving all classes and methods.
#   static void shutdown() // Called immediately before exit, after module unload (NO NWN context).
# Visibility of methods does not matter, nwnx_jvm finds them anyways.
# The provided jar contains a TestRunner which does various sanity tests.
# It is suggested to run it at least once with that.
#initListener=org/nwnx/nwnx2/jvm/TestRunner
initListener=Common/StartUp

# This is a class that has the following methods:
#   static void event(NWObject objSelf, String event)
# Visibility of methods does not matter, nwnx_jvm finds them anyways.
# The provided jar contains a event listener. You can listen for events
# by calling Scheduler.addSchedulerListener and implementing the interface.
eventListener=org/nwnx/nwnx2/jvm/Scheduler

# This is a class that has the following methods:
#   static void token(NWObject objSelf, String token)
# Visibility of methods does not matter, nwnx_jvm finds them anyways.
# The provided jar file implements a token listener. See the README for details
# as to what this actually is for.
tokenListener=org/nwnx/nwnx2/jvm/Scheduler

# This is a class that has the following methods:
#   static void sco(String key, byte[] gffData)
#   static byte[] rco(String key)
# Visibility of methods does not matter, nwnx_jvm finds them anyways.
# The provided jar implements a Observer pattern. Register with
# SCORCO.addSCORCOListener(...) to handle SCO/RCO-events.
# The provided TestRunner tests SCO/RCO *IF* your module publishes
# a event named "creature_hb". (Don't test on creature spawn, infinite loop).
scorcoListener=org/nwnx/nwnx2/jvm/SCORCO

# This is a class that has the following methods:
#   static byte[] demandRes(String resRef)
# Visibility of methods does not matter, nwnx_jvm finds them anyways.
# The provided jar implements a Observer pattern. Register with
# ResMan.addResManListener(...) to handle ResMan-events.
# The provided TestRunner tests ResMan.
resmanListener=org/nwnx/nwnx2/jvm/ResMan

# The String conversation class. You can set
# your used charset at runtime there or write your own. It's usually
# safe to just keep it as-is if you're in ISO-8859-1.
convClass=org/nwnx/nwnx2/jvm/Conv
