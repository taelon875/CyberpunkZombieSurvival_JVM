From fresh Ubuntu Server 64 bit 16.04 install:

This set up involves creating a 32-bit chroot environment because nwn/nwnx cannot be run on 64-bit OS's.
I've tried to document this the best I can but there are a number of steps involved and I may have 
forgotten to write down a few. In general, look for --help documentation, the NWNX forums, and the Discord chat
room for help if you need it. I built these instructions mostly from Googling.

sudo apt-get update
sudo apt-get upgrade
sudo apt-get install curl
curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
sudo add-apt-repository "$(curl https://packages.microsoft.com/config/ubuntu/16.04/mssql-server-2017.list)"
sudo apt-get update
sudo apt-get install -y mssql-server
sudo /opt/mssql/bin/mssql-conf setup
sudo apt-get install debootstrap 
sudo apt-get install schroot
sudo debootstrap --arch i386 xenial /nwx86
sudo adduser nwnuser
sudo usermod -aG sudo nwnuser
sudo nano /etc/schroot/schroot.conf
	
	PASTE AT BOTTOM:
		[default]
		directory=/nwx86
		users=nwnuser
		personality=linux_32bit
		
cd /
sudo mount --bind /home /nwx86/home
sudo nano /etc/fstab

	PASTE AT BOTTOM:
		 /home /nwx86 none bind 0 0

sudo schroot apt-get install autoconf make build-essential gcc g++ zlib1g-dev
cd /home/czs
git clone https://github.com/NWNX/nwnx2-linux.git
cd /home/czs/nwnx2-linux
sudo schroot cat apt-dep | xargs sudo apt-get install -y
sudo schroot find . -name apt-dep -exec cat {} \; | xargs sudo apt-get install -y
sudo schroot apt-get install cmake
sudo schroot apt-get install nano
sudo schroot mkdir build && cd build

sudo schroot apt-get update

sudo schroot apt-get install software-properties-common
sudo schroot add-apt-repository ppa:webupd8team/java
sudo schroot apt-get update

sudo schroot apt-get install openjdk-8-jre
YOU WILL GET ERRORS ABOUT PROC
umount /proc
mount -t proc proc /proc
schroot apt-get install openjdk-8-jdk (NO SUDO)
schroot apt-get install oracle-java8-installer

sudo schroot apt-get install nano
sudo schroot nano /etc/environment

	PASTE AT BOTTOM:
		JAVA_HOME="/usr/lib/jvm/java-8-oracle"

schroot nano /path/to/nwnstartup.sh 
	
	PASTE LD_LIBRARY_PATH:
		export LD_LIBRARY_PATH=/usr/lib/jvm/java-8-openjdk-i386/jre/lib/i386/server/

Copy hak files, mod file, tlk file to server (hak, modules, tlk directories respectively) and extract using unrar
Copy NWNX files (plugins, nwnx2.ini, etc.) from the czs-server-files/nwnx-plugins directory to the ROOT directory of your NWN installation on the server
Make jvm folder in the root directory of NWN and copy all jvm libraries to it.
Build the java code using IntelliJ and copy the CyberpunkZombieSurvival_JVM.jar file to the jvm folder on the server.
Copy the nwnstartup.sh script to the root directory of NWN on the server.
Adjust the nwnx2.ini file to use your specific database connection information.

Run the nwnstartup.sh script on the server to start it.
